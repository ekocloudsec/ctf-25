// Generated by view binder compiler. Do not edit!
package com.medicloudx.healthmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.medicloudx.healthmanager.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPatientDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton buttonEmergencyCall;

  @NonNull
  public final MaterialButton buttonSharePatient;

  @NonNull
  public final MaterialCardView cardViewSystemInfo;

  @NonNull
  public final View riskIndicatorView;

  @NonNull
  public final TextView textViewCondition;

  @NonNull
  public final TextView textViewEmergencyContact;

  @NonNull
  public final TextView textViewLastVisit;

  @NonNull
  public final TextView textViewMedication;

  @NonNull
  public final TextView textViewPatientAge;

  @NonNull
  public final TextView textViewPatientId;

  @NonNull
  public final TextView textViewPatientName;

  @NonNull
  public final TextView textViewRiskLevel;

  @NonNull
  public final TextView textViewSystemInfo;

  @NonNull
  public final Toolbar toolbar;

  private ActivityPatientDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton buttonEmergencyCall, @NonNull MaterialButton buttonSharePatient,
      @NonNull MaterialCardView cardViewSystemInfo, @NonNull View riskIndicatorView,
      @NonNull TextView textViewCondition, @NonNull TextView textViewEmergencyContact,
      @NonNull TextView textViewLastVisit, @NonNull TextView textViewMedication,
      @NonNull TextView textViewPatientAge, @NonNull TextView textViewPatientId,
      @NonNull TextView textViewPatientName, @NonNull TextView textViewRiskLevel,
      @NonNull TextView textViewSystemInfo, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.buttonEmergencyCall = buttonEmergencyCall;
    this.buttonSharePatient = buttonSharePatient;
    this.cardViewSystemInfo = cardViewSystemInfo;
    this.riskIndicatorView = riskIndicatorView;
    this.textViewCondition = textViewCondition;
    this.textViewEmergencyContact = textViewEmergencyContact;
    this.textViewLastVisit = textViewLastVisit;
    this.textViewMedication = textViewMedication;
    this.textViewPatientAge = textViewPatientAge;
    this.textViewPatientId = textViewPatientId;
    this.textViewPatientName = textViewPatientName;
    this.textViewRiskLevel = textViewRiskLevel;
    this.textViewSystemInfo = textViewSystemInfo;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPatientDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPatientDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_patient_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPatientDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonEmergencyCall;
      MaterialButton buttonEmergencyCall = ViewBindings.findChildViewById(rootView, id);
      if (buttonEmergencyCall == null) {
        break missingId;
      }

      id = R.id.buttonSharePatient;
      MaterialButton buttonSharePatient = ViewBindings.findChildViewById(rootView, id);
      if (buttonSharePatient == null) {
        break missingId;
      }

      id = R.id.cardViewSystemInfo;
      MaterialCardView cardViewSystemInfo = ViewBindings.findChildViewById(rootView, id);
      if (cardViewSystemInfo == null) {
        break missingId;
      }

      id = R.id.riskIndicatorView;
      View riskIndicatorView = ViewBindings.findChildViewById(rootView, id);
      if (riskIndicatorView == null) {
        break missingId;
      }

      id = R.id.textViewCondition;
      TextView textViewCondition = ViewBindings.findChildViewById(rootView, id);
      if (textViewCondition == null) {
        break missingId;
      }

      id = R.id.textViewEmergencyContact;
      TextView textViewEmergencyContact = ViewBindings.findChildViewById(rootView, id);
      if (textViewEmergencyContact == null) {
        break missingId;
      }

      id = R.id.textViewLastVisit;
      TextView textViewLastVisit = ViewBindings.findChildViewById(rootView, id);
      if (textViewLastVisit == null) {
        break missingId;
      }

      id = R.id.textViewMedication;
      TextView textViewMedication = ViewBindings.findChildViewById(rootView, id);
      if (textViewMedication == null) {
        break missingId;
      }

      id = R.id.textViewPatientAge;
      TextView textViewPatientAge = ViewBindings.findChildViewById(rootView, id);
      if (textViewPatientAge == null) {
        break missingId;
      }

      id = R.id.textViewPatientId;
      TextView textViewPatientId = ViewBindings.findChildViewById(rootView, id);
      if (textViewPatientId == null) {
        break missingId;
      }

      id = R.id.textViewPatientName;
      TextView textViewPatientName = ViewBindings.findChildViewById(rootView, id);
      if (textViewPatientName == null) {
        break missingId;
      }

      id = R.id.textViewRiskLevel;
      TextView textViewRiskLevel = ViewBindings.findChildViewById(rootView, id);
      if (textViewRiskLevel == null) {
        break missingId;
      }

      id = R.id.textViewSystemInfo;
      TextView textViewSystemInfo = ViewBindings.findChildViewById(rootView, id);
      if (textViewSystemInfo == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityPatientDetailBinding((CoordinatorLayout) rootView, buttonEmergencyCall,
          buttonSharePatient, cardViewSystemInfo, riskIndicatorView, textViewCondition,
          textViewEmergencyContact, textViewLastVisit, textViewMedication, textViewPatientAge,
          textViewPatientId, textViewPatientName, textViewRiskLevel, textViewSystemInfo, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
