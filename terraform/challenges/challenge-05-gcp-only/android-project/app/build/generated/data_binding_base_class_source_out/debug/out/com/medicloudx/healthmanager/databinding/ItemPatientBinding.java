// Generated by view binder compiler. Do not edit!
package com.medicloudx.healthmanager.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.medicloudx.healthmanager.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPatientBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialCardView cardView;

  @NonNull
  public final ImageView emergencyIcon;

  @NonNull
  public final CircleImageView patientAvatar;

  @NonNull
  public final View riskIndicator;

  @NonNull
  public final TextView textViewLastVisit;

  @NonNull
  public final TextView textViewMedication;

  @NonNull
  public final TextView textViewPatientAge;

  @NonNull
  public final TextView textViewPatientCondition;

  @NonNull
  public final TextView textViewPatientName;

  private ItemPatientBinding(@NonNull MaterialCardView rootView, @NonNull MaterialCardView cardView,
      @NonNull ImageView emergencyIcon, @NonNull CircleImageView patientAvatar,
      @NonNull View riskIndicator, @NonNull TextView textViewLastVisit,
      @NonNull TextView textViewMedication, @NonNull TextView textViewPatientAge,
      @NonNull TextView textViewPatientCondition, @NonNull TextView textViewPatientName) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.emergencyIcon = emergencyIcon;
    this.patientAvatar = patientAvatar;
    this.riskIndicator = riskIndicator;
    this.textViewLastVisit = textViewLastVisit;
    this.textViewMedication = textViewMedication;
    this.textViewPatientAge = textViewPatientAge;
    this.textViewPatientCondition = textViewPatientCondition;
    this.textViewPatientName = textViewPatientName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPatientBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPatientBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_patient, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPatientBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      MaterialCardView cardView = (MaterialCardView) rootView;

      id = R.id.emergencyIcon;
      ImageView emergencyIcon = ViewBindings.findChildViewById(rootView, id);
      if (emergencyIcon == null) {
        break missingId;
      }

      id = R.id.patientAvatar;
      CircleImageView patientAvatar = ViewBindings.findChildViewById(rootView, id);
      if (patientAvatar == null) {
        break missingId;
      }

      id = R.id.riskIndicator;
      View riskIndicator = ViewBindings.findChildViewById(rootView, id);
      if (riskIndicator == null) {
        break missingId;
      }

      id = R.id.textViewLastVisit;
      TextView textViewLastVisit = ViewBindings.findChildViewById(rootView, id);
      if (textViewLastVisit == null) {
        break missingId;
      }

      id = R.id.textViewMedication;
      TextView textViewMedication = ViewBindings.findChildViewById(rootView, id);
      if (textViewMedication == null) {
        break missingId;
      }

      id = R.id.textViewPatientAge;
      TextView textViewPatientAge = ViewBindings.findChildViewById(rootView, id);
      if (textViewPatientAge == null) {
        break missingId;
      }

      id = R.id.textViewPatientCondition;
      TextView textViewPatientCondition = ViewBindings.findChildViewById(rootView, id);
      if (textViewPatientCondition == null) {
        break missingId;
      }

      id = R.id.textViewPatientName;
      TextView textViewPatientName = ViewBindings.findChildViewById(rootView, id);
      if (textViewPatientName == null) {
        break missingId;
      }

      return new ItemPatientBinding((MaterialCardView) rootView, cardView, emergencyIcon,
          patientAvatar, riskIndicator, textViewLastVisit, textViewMedication, textViewPatientAge,
          textViewPatientCondition, textViewPatientName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
